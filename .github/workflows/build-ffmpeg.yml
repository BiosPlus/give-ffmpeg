# .github/workflows/build-ffmpeg.yml
name: "Build FFmpeg for Linux"
on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        arch: [x86_64, aarch64, arm, riscv, ppc, s390]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Checkout FFmpeg repository
        uses: actions/checkout@v3
        with:
          repository: FFmpeg/FFmpeg
          path: ffmpeg-source

      - name: Cache FFmpeg source
        uses: actions/cache@v3
        with:
          path: ~/ffmpeg-source
          key: ffmpeg-source-${{ runner.os }}-${{ hashFiles('**/ffmpeg-source/**') }}
          restore-keys: |
            ffmpeg-source-${{ runner.os }}-
            ffmpeg-source-

      - name: Debug directory
        run: |
          echo "Directory is:"
          pwd
          ls -al ~
          ls -al ffmpeg-source
          echo "PATH is: $PATH"

      - name: Update packages for Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update

      - name: Install base dependencies for Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
            sudo apt-get install -y autoconf \
            automake \
            build-essential \
            cmake \
            git-core \
            libass-dev \
            libfreetype6-dev \
            libgnutls28-dev \
            libmp3lame-dev \
            libsdl2-dev \
            libtool \
            libva-dev \
            libvdpau-dev \
            libvorbis-dev \
            libxcb1-dev \
            libxcb-shm0-dev \
            libxcb-xfixes0-dev \
            meson \
            ninja-build \
            pkg-config \
            texinfo \
            wget \
            yasm \
            zlib1g-dev

      - name: Install nasm for Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install nasm

      - name: Install x264 for Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install libx264-dev

      - name: Install x265 for Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install libx265-dev libnuma-dev

      - name: Install libvpx for Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install libvpx-dev

      - name: Install libfdk-aac for Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install libfdk-aac-dev

      - name: Install libopus for Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install libopus-dev

      - name: Install aom for Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
            set +e
            cd ffmpeg-source
            git -C aom pull 2> /dev/null || git clone --depth 1 https://aomedia.googlesource.com/aom
            mkdir -p aom_build
            cd aom_build
            PATH="$HOME/bin:$PATH" cmake -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX="$HOME/ffmpeg_build" -DENABLE_TESTS=OFF -DENABLE_NASM=on ../aom
            PATH="$HOME/bin:$PATH" make
            if [ $? -eq 0 ]; then
              make install
              touch ~/aom_installed.flag
            else
              echo "aom installation failed, continuing without it."
            fi

      - name: Install SVT-AV1 for Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
            set +e
            cd ffmpeg-source
            git -C SVT-AV1 pull 2> /dev/null || git clone https://gitlab.com/AOMediaCodec/SVT-AV1.git
            mkdir -p SVT-AV1/build
            cd SVT-AV1/build
            PATH="$HOME/bin:$PATH" cmake -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX="$HOME/ffmpeg_build" -DCMAKE_BUILD_TYPE=Release -DBUILD_DEC=OFF -DBUILD_SHARED_LIBS=OFF ..
            PATH="$HOME/bin:$PATH" make
            if [ $? -eq 0 ]; then
              make install
              touch ~/svtav1_installed.flag
            else
              echo "SVT-AV1 installation failed, continuing without it."
            fi

      - name: Install libdav1d for Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
            set +e
            sudo apt-get install libdav1d-dev
            if [ $? -eq 0 ]; then
              cd ffmpeg-source
              touch ~/libdav1d_installed.flag
            else
              echo "libdav1d installation failed, continuing without it."
            fi

      - name: Debug directory
        run: |
          ls -al
          ls -al ffmpeg-source
          echo "PATH is: $PATH"

      - name: Build FFmpeg
        run: |
          cd ffmpeg-source

          export PKG_CONFIG_PATH="$HOME/ffmpeg_build/lib/pkgconfig:$PKG_CONFIG_PATH"

          AOM_FLAG=""
          if [ -f ~/aom_installed.flag ]; then
            AOM_FLAG="--enable-libaom"
          fi

          DAV1D_FLAG=""
          if [ -f ~/libdav1d_installed.flag ]; then
            DAV1D_FLAG="--enable-libdav1d"
          fi

          SVTAV1_FLAG=""
          if [ -f ~/svtav1_installed.flag ]; then
            SVTAV1_FLAG="--enable-libsvtav1"
          fi

          ./configure --prefix=../build/${{ matrix.os }}-${{ matrix.arch }} \
          --arch=${{ matrix.arch }} \
          --target-os=linux \
          --enable-gpl \
          --enable-gnutls \
          ${AOM_FLAG} \
          ${DAV1D_FLAG} \
          ${SVTAV1_FLAG} \
          --enable-libass \
          --enable-libfdk-aac \
          --enable-libfreetype \
          --enable-libmp3lame \
          --enable-libopus \
          --enable-libvorbis \
          --enable-libvpx \
          --enable-libx264 \
          --enable-libx265 \
          --enable-nonfree \
          --samples=fate-suite/
          make -j$(nproc)
          make install